WHITESPACE = _{ " " | "\t" | NEWLINE | "," }
COMMENT = _{";" ~ (!NEWLINE ~ ANY)* ~ NEWLINE }
edn = { (WHITESPACE|COMMENT)* ~ (expr)+ ~ (WHITESPACE|COMMENT)* }
expr = _{ nil | boolean | string | character | keyword | symbol | number | list | vector | map | set | tagged_element }

nil = { "nil" }
boolean = { "true" | "false" }

string = ${ "\"" ~ inner ~ "\"" }
inner = @{ char* }
char = {
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}

character = @{ "\\" ~ ANY }

// [:]?([\D&&[^/]].*/)?([\D&&[^/]][^/]*)
keyword = ${ ":" ~ symbol }
symbol = ${ namespace? ~ ident }
namespace = @{ (ident ~ "/")+ }

// TODO: better identifier matching
ident = @{ ASCII_ALPHANUMERIC+ }

number = ${ integer | float | ratio }
//  ([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?
integer = @{ ("-" | "+")? ~ (decimal | hex | octal | radix ) ~ "N"?}
decimal = @{ "0" | (ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*)}
hex = @{ "0" ~ ^"x" ~ ASCII_HEX_DIGIT+ }
octal = @{ "0" ~ ('0'..'7')+ }
radix = @{ (ASCII_NONZERO_DIGIT ~ ASCII_DIGIT?) ~ ^"r" ~ ASCII_HEX_DIGIT+ }

// ([-+]?[0-9]+)/([0-9]+)
ratio = @{ ("-" | "+")? ~ ASCII_DIGIT+ ~ "/" ~ ASCII_DIGIT+ }

// ([-+]?[0-9]+(\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?
float = @{ ("-" | "+")? ~ ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT*)? ~ (^"e" ~ ("-" | "+")? ~ ASCII_DIGIT+ )? ~ "M"?}

list = { "(" ~ expr* ~ ")" }
vector = { "[" ~ expr* ~ "]" }
map = { "{" ~ (expr ~ expr)* ~ "}" }
set = { "#{" ~ expr* ~ "}" }
tagged_element = { "#" ~ symbol ~ expr }